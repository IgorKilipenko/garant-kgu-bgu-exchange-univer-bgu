// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ ++ {
#Область ПрограммныйИнтерфейс

Функция ЗаполнитьТаблицыИндексовСвязей(КоллекцияТаблицИдентификаторовСвязей, Знач СтруктураДанныхСообщенияУниверситет) Экспорт
    // ТаблицаИндексовСвязей.Очистить();
КонецФункции

Функция ЗаполнитьДанныеИзУниверситет(Знач Объект, Знач ДанныеЗагрузки) Экспорт
    ОрганизацияПоУмолчанию = ГП_ОбменУниверситетБГУ.ПолучитьОрганизациюПоУмолчанию();

    Объект.Приказы.Очистить();
    Объект.Факультеты.Очистить();
    Объект.Студенты.Очистить();

    Объект.КоллекцияТаблицИдентификаторовСвязей = НовыйКоллекцияТаблицИдентификаторовСвязей();

    Для Каждого СтрокаДанныхПриказов Из ДанныеЗагрузки.Приказы Цикл
        НоваяСтрокаПриказа = Объект.Приказы.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаПриказа, СтрокаДанныхПриказов);

        НоваяСтрокаПриказа.Организация = ОрганизацияПоУмолчанию;
        НоваяСтрокаПриказа.НомерПриказа = СтрокаДанныхПриказов.НомерПриказа;
        НоваяСтрокаПриказа.Идентификатор = СтрокаДанныхПриказов.УникальныйИдентификатор;
        НоваяСтрокаПриказа.Представление = СтрокаДанныхПриказов.ПредставлениеСсылки;

        Для Каждого ЭлементКЗ Из Объект.КоллекцияТаблицИдентификаторовСвязей Цикл
            Если НЕ СтрокаДанныхПриказов.Свойство(ЭлементКЗ.Ключ) Тогда
                Продолжить;
            КонецЕсли;

            МассивИдентификаторовПриказа = СтрокаДанныхПриказов[ЭлементКЗ.Ключ];
            ТаблицаИдентификации = Объект.КоллекцияТаблицИдентификаторовСвязей[ЭлементКЗ.Ключ];
            ЗаполняемыйМассивСвязей = ТаблицаИдентификации.Получить(НоваяСтрокаПриказа.Идентификатор);
            Если ЗаполняемыйМассивСвязей = Неопределено Тогда
                ЗаполняемыйМассивСвязей = Новый Массив;
                ТаблицаИдентификации.Вставить(НоваяСтрокаПриказа.Идентификатор, ЗаполняемыйМассивСвязей);
            КонецЕсли;
            Для Каждого ТекущийИдентификатор Из МассивИдентификаторовПриказа Цикл
                ЗаполняемыйМассивСвязей.Добавить(ТекущийИдентификатор);
            КонецЦикла;
        КонецЦикла;
    КонецЦикла;

    Для Каждого СтрокаДанных Из ДанныеЗагрузки.СвязанныеОбъекты.Факультеты Цикл
        НоваяСтрока = Объект.Факультеты.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);

        НоваяСтрока.Идентификатор = СтрокаДанных.УникальныйИдентификатор;
    КонецЦикла;

    Для Каждого СтрокаДанных Из ДанныеЗагрузки.СвязанныеОбъекты.ФизическиеЛицаСтуденты Цикл
        НоваяСтрока = Объект.Студенты.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);

        НоваяСтрока.Идентификатор = СтрокаДанных.УникальныйИдентификатор;
    КонецЦикла;

    Возврат Истина;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаПриказы() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Приказы.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаФакультеты() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Факультеты.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаСтуденты() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Студенты.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаТипыПриказов() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.ТипыПриказов.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - Структура
Функция НовыйКоллекцияТаблицИдентификаторовСвязей() Экспорт
    РезультатФункции = Новый Структура;

    МассивНаименованийТаблиц = Новый Массив;
    МассивНаименованийТаблиц.Добавить("Факультеты");
    МассивНаименованийТаблиц.Добавить("Студенты");
    МассивНаименованийТаблиц.Добавить("ТипыПриказов");
    МассивНаименованийТаблиц.Добавить("КурсыОбучения");
    МассивНаименованийТаблиц.Добавить("Специальности");
    МассивНаименованийТаблиц.Добавить("ОснованияПоступления");

    Для Каждого ИмяТаблицыКолонки Из МассивНаименованийТаблиц Цикл
        РезультатФункции.Вставить(ИмяТаблицыКолонки, НовыйТаблицаИдентификаторовСвязей());
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
//      * ИдентификаторИсточникаСвязи - Строка
//      * ИдентификаторОбъектаСвязи - Строка
Функция НовыйТаблицаИдентификаторовСвязей() Экспорт
    // РезультатФункции = Новый ТаблицаЗначений;
    // РезультатФункции.Колонки.Добавить("ИдентификаторИсточникаСвязи", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    // РезультатФункции.Колонки.Добавить("ИдентификаторОбъектаСвязи", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    // РезультатФункции.Индексы.Добавить("ИдентификаторИсточникаСвязи");
    // Возврат РезультатФункции;

    РезультатФункции = Новый Соответствие;
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ -- }
