// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ ++ {
#Область ПрограммныйИнтерфейс

// Параметры:
//  Объект - ОбработкаОбъект.ГП_ПолучениеДанныхУниверситета
//  ДанныеЗагрузки - Структура
//  ИдентификаторХранилища - УникальныйИдентификатор, Неопределено
Функция ЗаполнитьДанныеИзУниверситет(Знач Объект, Знач ДанныеЗагрузки, Знач ИдентификаторХранилища = Неопределено) Экспорт
    ИдентификаторХранилища = ?(ИдентификаторХранилища = Неопределено, Новый УникальныйИдентификатор, ИдентификаторХранилища);

    ОрганизацияПоУмолчанию = ГП_ОбменУниверситетБГУ.ПолучитьОрганизациюПоУмолчанию();

    Объект.Приказы.Очистить();
    Объект.Факультеты.Очистить();
    Объект.Студенты.Очистить();

    Объект.КоллекцияТаблицИдентификаторовСвязей = НовыйКоллекцияТаблицИдентификаторовСвязей();
    Объект.АдресХранилищаДополнительныхТаблицЗагрузки = "";

    Для Каждого СтрокаДанныхПриказов Из ДанныеЗагрузки.Приказы Цикл
        НоваяСтрокаПриказа = Объект.Приказы.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаПриказа, СтрокаДанныхПриказов);

        НоваяСтрокаПриказа.Организация = ОрганизацияПоУмолчанию;
        НоваяСтрокаПриказа.НомерПриказа = СтрокаДанныхПриказов.НомерПриказа;
        НоваяСтрокаПриказа.Идентификатор = СтрокаДанныхПриказов.УникальныйИдентификатор;
        НоваяСтрокаПриказа.Представление = СтрокаДанныхПриказов.ПредставлениеСсылки;

        ЗаполнитьТаблицыИндексовСвязейПриказа(Объект.КоллекцияТаблицИдентификаторовСвязей, СтрокаДанныхПриказов);
    КонецЦикла;

    КэшЗагруженныхТаблицСвязанныхОбъектов = Новый Соответствие;
    КэшЗагруженныхТаблицСвязанныхОбъектов.Вставить("Приказы", Истина);

    Для Каждого СтрокаДанных Из ДанныеЗагрузки.СвязанныеОбъекты.Факультеты Цикл
        НоваяСтрока = Объект.Факультеты.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);

        НоваяСтрока.Идентификатор = СтрокаДанных.УникальныйИдентификатор;

        КэшЗагруженныхТаблицСвязанныхОбъектов.Вставить("Факультеты", Истина);
    КонецЦикла;

    Для Каждого СтрокаДанных Из ДанныеЗагрузки.СвязанныеОбъекты.ФизическиеЛицаСтуденты Цикл
        НоваяСтрока = Объект.Студенты.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);

        НоваяСтрока.Идентификатор = СтрокаДанных.УникальныйИдентификатор;

        КэшЗагруженныхТаблицСвязанныхОбъектов.Вставить("ФизическиеЛицаСтуденты", Истина);
    КонецЦикла;

    БуферКоллекцияДополнительныхТаблиц = Новый Структура;
    Для Каждого ТаблицаДанныхКЗ Из ДанныеЗагрузки.СвязанныеОбъекты Цикл
        Если ТипЗнч(ТаблицаДанныхКЗ.Значение) <> Тип("Массив") ИЛИ ТаблицаДанныхКЗ.Значение.Количество() = 0 Тогда
            Продолжить;
        КонецЕсли;
        Если КэшЗагруженныхТаблицСвязанныхОбъектов.Получить(ТаблицаДанныхКЗ.Ключ) <> Неопределено Тогда
            Продолжить;
        КонецЕсли;

        ЭтоСправочник = ТаблицаДанныхКЗ.Значение[0].Свойство("Код");
        ЭтоДокумент = НЕ ЭтоСправочник И ТаблицаДанныхКЗ.Значение[0].Свойство("Номер") И ТаблицаДанныхКЗ.Значение[0].Свойство("Дата");

        НоваяТаблицаДанных = Неопределено;
        Если ЭтоСправочник Тогда
            НоваяТаблицаДанных = НовыйТаблицаСправочникаУниверситет(Новый ОписаниеТипов);
        ИначеЕсли ЭтоДокумент Тогда
            НоваяТаблицаДанных = НовыйТаблицаДокументаУниверситет(Новый ОписаниеТипов);
        КонецЕсли;

        Если НоваяТаблицаДанных = Неопределено Тогда
            Продолжить;
        КонецЕсли;

        Для Каждого СтрокаТаблицы Из ТаблицаДанныхКЗ.Значение Цикл
            НоваяСтрока = НоваяТаблицаДанных.Добавить();
            ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
            НоваяСтрока.Идентификатор = СтрокаТаблицы.УникальныйИдентификатор;
        КонецЦикла;

        БуферКоллекцияДополнительныхТаблиц.Вставить(ТаблицаДанныхКЗ.Ключ, НоваяТаблицаДанных);
    КонецЦикла;

    АдресХранилищаДополнительныхТаблицЗагрузки = ПоместитьВоВременноеХранилище(БуферКоллекцияДополнительныхТаблиц, ИдентификаторХранилища);
    Объект.АдресХранилищаДополнительныхТаблицЗагрузки = АдресХранилищаДополнительныхТаблицЗагрузки;

    Возврат Истина;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаПриказы() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Приказы.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаФакультеты() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Факультеты.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаСтуденты() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.Студенты.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаТипыПриказов() Экспорт
    Объект = Обработки.ГП_ПолучениеДанныхУниверситета.Создать();
    Возврат Объект.ТипыПриказов.ВыгрузитьКолонки();
КонецФункции

// Возвращаемое значение:
//  - Структура
Функция НовыйКоллекцияТаблицИдентификаторовСвязей() Экспорт
    РезультатФункции = Новый Структура;

    МассивНаименованийТаблиц = Новый Массив;
    МассивНаименованийТаблиц.Добавить("Факультеты");
    МассивНаименованийТаблиц.Добавить("Студенты");
    МассивНаименованийТаблиц.Добавить("ТипыПриказов");
    МассивНаименованийТаблиц.Добавить("КурсыОбучения");
    МассивНаименованийТаблиц.Добавить("Специальности");
    МассивНаименованийТаблиц.Добавить("ОснованияПоступления");

    Для Каждого ИмяТаблицыКолонки Из МассивНаименованийТаблиц Цикл
        РезультатФункции.Вставить(ИмяТаблицыКолонки, НовыйТаблицаИдентификаторовСвязей());
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
//      * ИдентификаторИсточникаСвязи - Строка
//      * ИдентификаторОбъектаСвязи - Строка
Функция НовыйТаблицаИдентификаторовСвязей() Экспорт
    // РезультатФункции = Новый ТаблицаЗначений;
    // РезультатФункции.Колонки.Добавить("ИдентификаторИсточникаСвязи", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    // РезультатФункции.Колонки.Добавить("ИдентификаторОбъектаСвязи", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    // РезультатФункции.Индексы.Добавить("ИдентификаторИсточникаСвязи");
    // Возврат РезультатФункции;

    РезультатФункции = Новый Соответствие;
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ -- }

// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ ++ {
#Область СлужебныеПроцедурыИФункции

Функция ЗаполнитьТаблицыИндексовСвязейПриказа(КоллекцияТаблицИдентификаторовСвязей, Знач СтруктураПриказа) Экспорт
    Для Каждого ЭлементКЗ Из КоллекцияТаблицИдентификаторовСвязей Цикл
        КэшПсевдонимовНаименованийТаблиц = ПолучитьКэшПсевдонимовНаименованийТаблицУниверситет();
        НаименованияТаблицыУниверситет = КэшПсевдонимовНаименованийТаблиц.Получить(ЭлементКЗ.Ключ);
        НаименованияТаблицыУниверситет = ?(НаименованияТаблицыУниверситет = Неопределено,
                ЭлементКЗ.Ключ, НаименованияТаблицыУниверситет);

        Если НЕ СтруктураПриказа.Свойство(НаименованияТаблицыУниверситет) Тогда
            Продолжить;
        КонецЕсли;

        МассивИдентификаторовПриказа = СтруктураПриказа[НаименованияТаблицыУниверситет];
        ТаблицаИдентификации = КоллекцияТаблицИдентификаторовСвязей[ЭлементКЗ.Ключ];
        ЗаполняемыйМассивСвязей = ТаблицаИдентификации.Получить(СтруктураПриказа.УникальныйИдентификатор);
        Если ЗаполняемыйМассивСвязей = Неопределено Тогда
            ЗаполняемыйМассивСвязей = Новый Массив;
            ТаблицаИдентификации.Вставить(СтруктураПриказа.УникальныйИдентификатор, ЗаполняемыйМассивСвязей);
        КонецЕсли;
        Для Каждого ТекущийИдентификатор Из МассивИдентификаторовПриказа Цикл
            ЗаполняемыйМассивСвязей.Добавить(ТекущийИдентификатор);
        КонецЦикла;
    КонецЦикла;

    Возврат Истина;
КонецФункции

Функция НовыйТаблицаСправочникаУниверситет(Знач ТипСсылки)
    РезультатФункции = Новый ТаблицаЗначений;

    РезультатФункции.Колонки.Добавить("Ссылка", ТипСсылки);
    РезультатФункции.Колонки.Добавить("Код", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    РезультатФункции.Колонки.Добавить("Идентификатор", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    РезультатФункции.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(500));

    Возврат РезультатФункции;
КонецФункции

Функция НовыйТаблицаДокументаУниверситет(Знач ТипСсылки)
    РезультатФункции = Новый ТаблицаЗначений;

    РезультатФункции.Колонки.Добавить("Ссылка", ТипСсылки);
    РезультатФункции.Колонки.Добавить("Номер", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    РезультатФункции.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
    РезультатФункции.Колонки.Добавить("Идентификатор", ОбщегоНазначения.ОписаниеТипаСтрока(100));
    РезультатФункции.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(500));

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьКэшПсевдонимовНаименованийТаблицУниверситет()
    РезультатФункции = Новый Соответствие;

    РезультатФункции.Вставить("Студенты", "ФизическиеЛицаСтуденты");

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 24.04.2025 [F00227785] Обмен Университет-БГУ -- }
